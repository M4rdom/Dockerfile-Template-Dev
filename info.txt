Production
-> (Optional) Load_Balacer | Web Server | BackEnd | Database
-> BackEnd Framework | (Optional) Database
-> Web Server 
-> Database

Development
-> Frontend Framework | (Optional) Backend Framework | (Optional) Database
-> Backend Framework
-> Database

Web Servers  
nginx
apache | http
caddy
Lighttpd

BackEnd
Javascript: Node.js + ExpressJS fastify Nestjs Adonis
Python: Flask Django
Ruby: ruby on rails 
Java: springboot 
Go: Go

Package Manager
npm javascript 
pip python
bundler ruby 
maven java

Framework web
JavaScript\TypeScript: Angular React
Angular:
        Node.js + server.js
        Nginx + nginx.conf
        apache + httpd.conf


WSGI Server
Gunicorn
uWSGI
mod_wsgi -> apache

Pre-forking 
mod_wsgi -> Apache
NGINX + Gunicorn|uWSGI

Observaciones:
Django solo soporta oficialmente sqlite3 postgresql mysql oracle

If your build contains several layers and you want to ensure the build cache is reusable, order the instructions from less frequently changed to more frequently changed where possible.